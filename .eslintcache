[{"/home/tung/Desktop/my-app/src/index.tsx":"1","/home/tung/Desktop/my-app/src/reportWebVitals.ts":"2","/home/tung/Desktop/my-app/src/App.tsx":"3","/home/tung/Desktop/my-app/src/components/Login/index.tsx":"4","/home/tung/Desktop/my-app/src/functions/api/user/index.js":"5","/home/tung/Desktop/my-app/src/functions/service.js":"6","/home/tung/Desktop/my-app/src/functions/config.js":"7","/home/tung/Desktop/my-app/src/components/Register/index.tsx":"8","/home/tung/Desktop/my-app/src/reducer.js":"9","/home/tung/Desktop/my-app/src/components/Home/index.tsx":"10"},{"size":1066,"mtime":1608555900395,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608447108071,"results":"13","hashOfConfig":"12"},{"size":901,"mtime":1608559264757,"results":"14","hashOfConfig":"12"},{"size":3486,"mtime":1608627380998,"results":"15","hashOfConfig":"12"},{"size":1150,"mtime":1608626491279,"results":"16","hashOfConfig":"12"},{"size":1199,"mtime":1608558231205,"results":"17","hashOfConfig":"12"},{"size":81,"mtime":1608521415924,"results":"18","hashOfConfig":"12"},{"size":1482,"mtime":1608559134402,"results":"19","hashOfConfig":"12"},{"size":391,"mtime":1608556114933,"results":"20","hashOfConfig":"12"},{"size":2899,"mtime":1608559089487,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"9t4tz2",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},"/home/tung/Desktop/my-app/src/index.tsx",["48"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider, useDispatch } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducer.js'\nimport UserApi from './functions/api/user'\n\n    const store = createStore(rootReducer);\n\tconst initialApp = (currentUser) => {\n\t\tlet data: any;\n\t\tdata = {\n\t\t\tcurrentUser\n\t\t}\n    \tvar action = { type : 'SET_CURRENT_USER' , data};\n    \tstore.dispatch(action)\n\t\tReactDOM.render(\n\t\t\t<Provider store={store}>\n\t\t    \t<App />\n\t\t  \t</Provider>,\n\t\t  document.getElementById('root')\n\t\t);\n\t};\n\tlet token = localStorage.getItem('usertoken');\n\tif (token){\n\t\tUserApi.getInfo(token).then(data=>{\n\t\t\tinitialApp(data.user)\n\t\t})\n\t\t.catch(e=>{\n\t\t\tinitialApp()\n\t\t})\n\t}else{\n\t\tinitialApp()\n\t}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["49","50"],"/home/tung/Desktop/my-app/src/reportWebVitals.ts",[],"/home/tung/Desktop/my-app/src/App.tsx",["51","52"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport  LoginComponent from './components/Login';\nimport  RegisterComponent from './components/Register';\nimport  HomeComponent from './components/Home';\nimport { useSelector } from 'react-redux';\n\nexport default function App() {\n  const currentUser = useSelector(state => state.currentUser);\n    if (currentUser == undefined){\n        return (\n          <LoginComponent />\n        );\n    }\n    return (\n      <Router>\n          <Switch>\n            <Route path=\"/register\">\n                <RegisterComponent />\n            </Route>\n            <Route path=\"/\">\n                <HomeComponent />\n            </Route>\n            <Route path=\"/login\">\n                <LoginComponent />\n            </Route>\n          </Switch>\n      </Router>\n    );\n}","/home/tung/Desktop/my-app/src/components/Login/index.tsx",["53","54","55","56"],"/home/tung/Desktop/my-app/src/functions/api/user/index.js",[],"/home/tung/Desktop/my-app/src/functions/service.js",[],["57","58"],"/home/tung/Desktop/my-app/src/functions/config.js",[],"/home/tung/Desktop/my-app/src/components/Register/index.tsx",["59"],"import { Form, Input, Button, Checkbox,  Row, Col } from 'antd';\nimport UserApi from './../../functions/api/user'\nimport { useDispatch } from 'react-redux';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login = () => {\n\tconst dispatch = useDispatch();\n\tconst onFinish = (values: any) => {\n\t    UserApi.register(values).then(res=>{\n\t    \tlet data: any;\n\t\t\tdata = {\n\t\t\t\tcurrentUser : res.user\n\t\t\t}\n\t    \tvar action = { type : 'SET_CURRENT_USER' , data};\n  \t\t\tdispatch(action)\n\t     \tlocalStorage.setItem('usertoken', res.token)\n\t    })\n\t};\n\n  \treturn (\n\t  \t<Row>\n\t      \t<Col span={12} offset={5}>\n\t\t        <Form\n\t\t\t      {...layout}\n\t\t\t      name=\"basic\"\n\t\t\t      initialValues={{ remember: true }}\n\t\t\t      onFinish={onFinish}\n\t\t\t    >\n\t\t\t      <Form.Item\n\t\t\t        label=\"Email\"\n\t\t\t        name=\"email\"\n\t\t\t        rules={[{ required: true, message: 'Please input your email!' }]}\n\t\t\t      >\n\t\t\t        <Input />\n\t\t\t      </Form.Item>\n\n\t\t\t      <Form.Item\n\t\t\t        label=\"Password\"\n\t\t\t        name=\"password\"\n\t\t\t        rules={[{ required: true, message: 'Please input your password!' }]}\n\t\t\t      >\n\t\t\t        <Input.Password />\n\t\t\t      </Form.Item>\n\n\t\t\t      <Form.Item {...tailLayout}>\n\t\t\t        <Button type=\"primary\" htmlType=\"submit\">\n\t\t\t          Register\n\t\t\t        </Button>\n\t\t\t      </Form.Item>\n\t\t\t    </Form>\n\t      \t</Col>\n\t    </Row>\n  \t);\n};\nexport default Login;","/home/tung/Desktop/my-app/src/reducer.js",[],"/home/tung/Desktop/my-app/src/components/Home/index.tsx",["60","61","62","63"],"import { Form, Input, InputNumber, Button, Row, Col, notification, Menu} from 'antd';\nimport UserApi from './../../functions/api/user'\nimport 'font-awesome/css/font-awesome.min.css';\nimport './style.css';\nimport React, { useState , useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\n\n\nconst Home = () => {\n  \tconst dispatch = useDispatch();\n    const currentUser = useSelector(state => state.currentUser);\n\tconst onFinish = (values: any) => {\n\t\tlet token = localStorage.getItem('usertoken');\n  \t \tUserApi.updateInfo(values, token).then(ok=>{\n  \t \t\topenNotification()\n  \t \t})\n\t};\n\tconst openNotification = () => {\n\t  notification.success({\n\t    message: 'Notification Title',\n\t    description:\n\t      'Update Successlly',\n\t    className: 'custom-class',\n\t    style: {\n\t      width: 600,\n\t    },\n\t  });\n\t};\n\tconst logOut = () => {\n\t  localStorage.removeItem(\"usertoken\")\n\n\t};\n  \n\tconst layout = {\n\t  labelCol: { span: 8 },\n\t  wrapperCol: { span: 16 },\n\t};\n\tconst { SubMenu } = Menu;\n\n    return (\n\t   \t<div>\n\t\t   \t<div>\n\t\t\t    <Menu  mode=\"horizontal\">\n\t\t\t        <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n\t\t\t          Navigation One\n\t\t\t        </Menu.Item>\n\t\t\t        <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\n\t\t\t          Navigation Two\n\t\t\t        </Menu.Item>\n\t\t\t        <SubMenu key=\"SubMenu\" icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\n\t\t\t          <Menu.ItemGroup title=\"Item 1\">\n\t\t\t            <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n\t\t\t            <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n\t\t\t          </Menu.ItemGroup>\n\t\t\t          <Menu.ItemGroup title=\"Item 2\">\n\t\t\t            <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n\t\t\t            <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n\t\t\t          </Menu.ItemGroup>\n\t\t\t        </SubMenu>\n\t\t\t        <Menu.Item key=\"alipay\" onClick={logOut}>\n\t\t\t          Logout\n\t\t\t        </Menu.Item>\n      \t\t\t</Menu>\n\t\t\t</div>\n\n\t  \t\t<div>\n\t\t  \t\t<Row>\n\t\t\t\t    <Col span={12}>\n\t\t\t\t\t    <Form {...layout} name=\"nest-messages\" initialValues={currentUser} onFinish={onFinish}>\n\t\t\t\t\t      <Form.Item name={'email'} label=\"Email\" >\n\t\t\t\t\t        <Input />\n\t\t\t\t\t      </Form.Item>\n\t\t\t\t\t      <Form.Item name={'firstName'} label=\"First Name\">\n\t\t\t\t\t        <Input />\n\t\t\t\t\t      </Form.Item>\n\t\t\t\t\t      <Form.Item name={'address'} label=\"Address\">\n\t\t\t\t\t        <Input />\n\t\t\t\t\t      </Form.Item>\n\t\t\t\t\t      <Form.Item name={'phone'} label=\"Phone\">\n\t\t\t\t\t        <Input.TextArea />\n\t\t\t\t\t      </Form.Item>\n\t\t\t\t\t      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n\t\t\t\t\t        <Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t          Update\n\t\t\t\t\t        </Button>\n\t\t\t\t\t      </Form.Item>\n\t\t\t\t\t    </Form>\n\t\t\t\t\t</Col>\n\t\t\t    </Row>\n\t  \t\t</div>\n\t  \t</div>\n\t);\n};\nexport default Home;",{"ruleId":"64","severity":1,"message":"65","line":5,"column":20,"nodeType":"66","messageId":"67","endLine":5,"endColumn":31},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"72","line":6,"column":3,"nodeType":"66","messageId":"67","endLine":6,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":16,"column":21,"nodeType":"75","messageId":"76","endLine":16,"endColumn":23},{"ruleId":"64","severity":1,"message":"77","line":1,"column":31,"nodeType":"66","messageId":"67","endLine":1,"endColumn":39},{"ruleId":"64","severity":1,"message":"78","line":5,"column":17,"nodeType":"66","messageId":"67","endLine":5,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":5,"column":28,"nodeType":"66","messageId":"67","endLine":5,"endColumn":37},{"ruleId":"64","severity":1,"message":"80","line":20,"column":11,"nodeType":"66","messageId":"67","endLine":20,"endColumn":22},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"77","line":1,"column":31,"nodeType":"66","messageId":"67","endLine":1,"endColumn":39},{"ruleId":"64","severity":1,"message":"81","line":1,"column":23,"nodeType":"66","messageId":"67","endLine":1,"endColumn":34},{"ruleId":"64","severity":1,"message":"78","line":5,"column":17,"nodeType":"66","messageId":"67","endLine":5,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":5,"column":28,"nodeType":"66","messageId":"67","endLine":5,"endColumn":37},{"ruleId":"64","severity":1,"message":"82","line":11,"column":10,"nodeType":"66","messageId":"67","endLine":11,"endColumn":18},"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Checkbox' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","'InputNumber' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]